/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package shiller.app;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

/**
 *
 * @author benfa
 */
public class MyDialog extends JDialog implements ActionListener{

    /**
     * Creates new form NewTerreno
     */
    
    private int mod;
    Intestazione intestazione= new Intestazione();
    private boolean succ=false;

    public MyDialog(java.awt.Frame parent, boolean modal, String title, int creaModifica) {
        super(parent, modal);
        this.setResizable(false);
        this.setTitle(title);
        initComponents();
        mod = creaModifica;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        String[] tipiTubo ={"pvc","acciaio al carbonio","acciaio inox"};

        jTextField2 = new JTextField();
        jLabel2 = new JLabel();
        jLabel3 = new JLabel();
        jLabel6 = new JLabel();
        jLabel9 = new JLabel();
        jLabel10 = new JLabel();
        via = new JTextField();
        paese = new JTextField();
        jLabel8 = new JLabel();
        committente = new JTextField();
        localita = new JTextField();
        data = new JTextField();
        diametroPerf = new JTextField();
        jLabel11 = new JLabel();
        sistemaPerf = new JTextField();
        profonditaPerf = new JTextField();
        profonditaPozzo = new JTextField();
        colonnaRivestimento = new JComboBox(tipiTubo);
        livelloStatico = new JTextField();
        diametroRivestimento = new JTextField();
        jLabel7 = new JLabel();
        jLabel12 = new JLabel();
        jLabel13 = new JLabel();
        jLabel14 = new JLabel();
        jLabel15 = new JLabel();
        jLabel16 = new JLabel();
        profonditaRest = new JTextField();
        livelloDinamico = new JTextField();
        jLabel17 = new JLabel();
        jLabel18 = new JLabel();
        jLabel19 = new JLabel();
        portataDinamico = new JTextField();
        jLabel20 = new JLabel();
        jScrollPane2 = new JScrollPane();
        infAgg = new JTextArea();
        jButton1 = new JButton();
        jButton2 = new JButton();

        jTextField2.setText("jTextField2");

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

        jLabel2.setText("Via:");

        jLabel3.setText("Paese:");

        jLabel6.setText("Diametro di perforazione:");

        jLabel9.setText("Pozzo realizzato in località:");

        jLabel10.setText("Sistema di perforazione:");

        via.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                viaActionPerformed(evt);
            }
        });

        paese.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                paeseActionPerformed(evt);
            }
        });

        jLabel8.setText("Committente:");

        committente.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                committenteActionPerformed(evt);
            }
        });

        localita.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                localitaActionPerformed(evt);
            }
        });

        data.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                dataActionPerformed(evt);
            }
        });

        diametroPerf.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                diametroPerfActionPerformed(evt);
            }
        });

        jLabel11.setText("Pozzo realizzato in data:");

        sistemaPerf.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                sistemaPerfActionPerformed(evt);
            }
        });

        profonditaPerf.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                profonditaPerfActionPerformed(evt);
            }
        });

        profonditaPozzo.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                profonditaPozzoActionPerformed(evt);
            }
        });

        colonnaRivestimento.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                colonnaRivestimentoActionPerformed(evt);
            }
        });

        livelloStatico.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                livelloStaticoActionPerformed(evt);
            }
        });

        diametroRivestimento.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                diametroRivestimentoActionPerformed(evt);
            }
        });

        jLabel7.setText("Profondità perforazione:");

        jLabel12.setText("Profondità pozzo:");

        jLabel13.setText("Colonna di rivestimento:");

        jLabel14.setText("Diametro colonna rivestimento:");

        jLabel15.setText("Dati facoltativi");

        jLabel16.setText("Livello dinamico:");

        profonditaRest.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                profonditaRestActionPerformed(evt);
            }
        });

        livelloDinamico.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                livelloDinamicoActionPerformed(evt);
            }
        });

        jLabel17.setText("con portata di (l/min):");

        jLabel18.setText("Livello statico:");

        jLabel19.setText("Porfondità restrizione:");

        portataDinamico.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                portataDinamicoActionPerformed(evt);
            }
        });

        jLabel20.setText("Informazioni aggintive:");

        infAgg.setColumns(20);
        infAgg.setRows(5);
        jScrollPane2.setViewportView(infAgg);

        jButton1.setText("Annulla");

        if(mod==0)
            jButton2.setText("Crea");
        else
            jButton2.setText("Modifica");

        jButton1.addActionListener(this);
        jButton2.addActionListener(this);
        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel8)
                                                        .addComponent(jLabel3)
                                                        .addComponent(jLabel9)
                                                        .addComponent(jLabel10)
                                                        .addComponent(jLabel7)
                                                        .addComponent(jLabel13)
                                                        .addComponent(jLabel16)
                                                        .addComponent(jLabel18)
                                                        .addComponent(jLabel19))
                                                .addGap(54, 54, 54)
                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                                        .addComponent(livelloStatico, GroupLayout.PREFERRED_SIZE, 231, GroupLayout.PREFERRED_SIZE)
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addComponent(colonnaRivestimento, GroupLayout.PREFERRED_SIZE, 231, GroupLayout.PREFERRED_SIZE)
                                                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addComponent(jLabel14)))
                                                                .addContainerGap())
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                                        .addComponent(portataDinamico, GroupLayout.PREFERRED_SIZE, 231, GroupLayout.PREFERRED_SIZE)
                                                                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                                                                                .addComponent(diametroRivestimento, GroupLayout.PREFERRED_SIZE, 231, GroupLayout.PREFERRED_SIZE)
                                                                                .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                                        .addComponent(profonditaPerf, GroupLayout.PREFERRED_SIZE, 231, GroupLayout.PREFERRED_SIZE)
                                                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                                        .addComponent(jLabel12)
                                                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                        .addComponent(profonditaPozzo, GroupLayout.PREFERRED_SIZE, 231, GroupLayout.PREFERRED_SIZE))
                                                                                .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                                        .addComponent(sistemaPerf, GroupLayout.PREFERRED_SIZE, 231, GroupLayout.PREFERRED_SIZE)
                                                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                                        .addComponent(jLabel6)
                                                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                        .addComponent(diametroPerf, GroupLayout.PREFERRED_SIZE, 231, GroupLayout.PREFERRED_SIZE))
                                                                                .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                                        .addComponent(localita, GroupLayout.PREFERRED_SIZE, 231, GroupLayout.PREFERRED_SIZE)
                                                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                                        .addComponent(jLabel11)
                                                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                        .addComponent(data, GroupLayout.PREFERRED_SIZE, 231, GroupLayout.PREFERRED_SIZE))
                                                                                .addComponent(paese, GroupLayout.Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 231, GroupLayout.PREFERRED_SIZE)
                                                                                .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                                        .addComponent(committente, GroupLayout.PREFERRED_SIZE, 231, GroupLayout.PREFERRED_SIZE)
                                                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                                        .addComponent(jLabel2)
                                                                                        .addGap(213, 213, 213)
                                                                                        .addComponent(via, GroupLayout.PREFERRED_SIZE, 231, GroupLayout.PREFERRED_SIZE))
                                                                                .addGroup(layout.createSequentialGroup()
                                                                                        .addComponent(profonditaRest, GroupLayout.PREFERRED_SIZE, 231, GroupLayout.PREFERRED_SIZE)
                                                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                                        .addComponent(jLabel17)
                                                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                                                                .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                                                        .addComponent(jButton2, GroupLayout.PREFERRED_SIZE, 103, GroupLayout.PREFERRED_SIZE)
                                                                                                        .addGap(30, 30, 30)
                                                                                                        .addComponent(jButton1, GroupLayout.PREFERRED_SIZE, 103, GroupLayout.PREFERRED_SIZE))
                                                                                                .addComponent(livelloDinamico, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 231, GroupLayout.PREFERRED_SIZE)))))
                                                                .addGap(0, 17, Short.MAX_VALUE))))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel20)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(421, 421, 421)
                                                                .addComponent(jLabel15)
                                                                .addGap(0, 0, Short.MAX_VALUE))
                                                        .addComponent(jScrollPane2))
                                                .addContainerGap())))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(via, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(committente, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel2))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(paese, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel3))
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(localita, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(data, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel9)
                                        .addComponent(jLabel11))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel10)
                                        .addComponent(diametroPerf, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(sistemaPerf, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel6))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(profonditaPerf, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(profonditaPozzo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel12))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(colonnaRivestimento, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(diametroRivestimento, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel13)
                                        .addComponent(jLabel14))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(livelloStatico, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel18))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel15)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(profonditaRest, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel16)
                                        .addComponent(livelloDinamico, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel17))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(portataDinamico, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel19))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel20)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButton1)
                                        .addComponent(jButton2))
                                .addGap(0, 23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>

    private void viaActionPerformed(ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void paeseActionPerformed(ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void committenteActionPerformed(ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void localitaActionPerformed(ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void dataActionPerformed(ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void diametroPerfActionPerformed(ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void sistemaPerfActionPerformed(ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void profonditaPerfActionPerformed(ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void profonditaPozzoActionPerformed(ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void colonnaRivestimentoActionPerformed(ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void livelloStaticoActionPerformed(ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void diametroRivestimentoActionPerformed(ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void profonditaRestActionPerformed(ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void livelloDinamicoActionPerformed(ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void portataDinamicoActionPerformed(ActionEvent evt) {
        // TODO add your handling code here:
    }

    // Variables declaration - do not modify
    private JComboBox colonnaRivestimento;
    private JTextField committente;
    private JTextField data;
    private JTextField diametroPerf;
    private JTextField diametroRivestimento;
    private JTextArea infAgg;
    private JButton jButton1;
    private JButton jButton2;
    private JLabel jLabel10;
    private JLabel jLabel11;
    private JLabel jLabel12;
    private JLabel jLabel13;
    private JLabel jLabel14;
    private JLabel jLabel15;
    private JLabel jLabel16;
    private JLabel jLabel17;
    private JLabel jLabel18;
    private JLabel jLabel19;
    private JLabel jLabel2;
    private JLabel jLabel20;
    private JLabel jLabel3;
    private JLabel jLabel6;
    private JLabel jLabel7;
    private JLabel jLabel8;
    private JLabel jLabel9;
    private JScrollPane jScrollPane2;
    private JTextField jTextField2;
    private JTextField livelloDinamico;
    private JTextField livelloStatico;
    private JTextField localita;
    private JTextField paese;
    private JTextField portataDinamico;
    private JTextField profonditaPerf;
    private JTextField profonditaPozzo;
    private JTextField profonditaRest;
    private JTextField sistemaPerf;
    private JTextField via;
    private ArrayList<String> errori;
    // End of variables declaration


    public void actionPerformed(ActionEvent ae)
    {
        int er=0;
        errori = new ArrayList<String>();

        if(ae.getSource() == jButton2){
            if(!committente.getText().equals(""))
                intestazione.setCommittente(committente.getText());
            else{
                er=1;
                errori.add("Committente");
            }

            if(!via.getText().equals(""))
                intestazione.setVia(via.getText());
            else{
                er=1;
                errori.add("Via");
            }

            if(!paese.getText().equals(""))
                intestazione.setPaese(paese.getText());
            else{
                er=1;
                errori.add("paese");
            }

            if(!localita.getText().equals(""))
                intestazione.setLocalita(localita.getText());
            else{
                er=1;
                errori.add("località");
            }

            if(!data.getText().equals(""))
                intestazione.setData(data.getText());
            else{
                er=1;
                errori.add("data");
            }

            if(!sistemaPerf.getText().equals(""))
                intestazione.setSistemaPerforazione(sistemaPerf.getText());
            else{
                er=1;
                errori.add("Sistema perforazione");
            }

            if(!diametroPerf.getText().equals(""))
                intestazione.setDiametroPerforazione(diametroPerf.getText());
            else{
                er=1;
                errori.add("Diametro perforazione");
            }

            if(!profonditaPerf.getText().equals(""))
                intestazione.setProfonditaPeroforazione(profonditaPerf.getText());
            else{
                er=1;
                errori.add("Profondità perforazione");
            }

            if(!profonditaPozzo.getText().equals("")){
                try{
                    int prof = Integer.parseInt(profonditaPozzo.getText());
                    intestazione.setProfonditaPozzo(prof);
                }catch (NumberFormatException ne){
                    er=1;
                    errori.add("Profondità pozzo");
                }
            }else{
                er=1;
                errori.add("Profondità pozzo");
            }


            intestazione.setColonnaRivesetimento((String)colonnaRivestimento.getSelectedItem());

            if(!diametroRivestimento.getText().equals(""))
                intestazione.setDiametroRivestimento(diametroRivestimento.getText());
            else{
                er=1;
                errori.add("Diametro rivestimento");
            }

            if(!livelloStatico.getText().equals(""))
                try{
                    double statd = Double.parseDouble(livelloStatico.getText());
                    //int stat = Integer.parseInt(livelloStatico.getText());
                    intestazione.setLivelloStatico(statd);
                }catch (NumberFormatException ne){
                    er=1;
                    errori.add("Livello statico");
                }
            else{
                er=1;
                errori.add("Livello statico");
            }

            intestazione.setProfonditaRestrizione(portataDinamico.getText());
            intestazione.setLivelloDinamico(profonditaRest.getText());
            intestazione.setPortataDinamico(livelloDinamico.getText());
            intestazione.setInfoAggiuntive(infAgg.getText());

            if (er!=1){
                succ = true;
                dispose();
            }
            else{
                String error ="Controlla i dati:";
                for(String e: errori){
                    error+="\n"+e;
                }
                JOptionPane.showMessageDialog(this, error, "Errore", JOptionPane.ERROR_MESSAGE);
            }
        }else
            dispose();
    }

    public Intestazione getIntestazione()
    {
        return intestazione;
    }
    
    public boolean getSucc(){
        return succ;
    }

    public void preset(Intestazione i){
        committente.setText(i.getCommittente());
        via.setText(i.getVia());
        paese.setText(i.getPaese());
        localita.setText(i.getLocalita());
        data.setText(i.getData());
        sistemaPerf.setText(i.getSistemaPerforazione());
        diametroPerf.setText(i.getDiametroPerforazione());
        profonditaPerf.setText(i.getProfonditaPeroforazione());
        profonditaPozzo.setText(String.valueOf(i.getProfonditaPozzo()));
        colonnaRivestimento.setSelectedItem(i.getColonnaRivesetimento());
        diametroRivestimento.setText(i.getDiametroRivestimento());
        livelloStatico.setText(String.valueOf(i.getLivelloStatico()));

        portataDinamico.setText(i.getProfonditaRestrizione());
        profonditaRest.setText(i.getLivelloDinamico());
        livelloDinamico.setText(i.getPortataDinamico());
        infAgg.setText(i.getInfoAggiuntive());


    }
}
